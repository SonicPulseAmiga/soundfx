/****h* DeCrackle/DeCrackle.h [4.3] *
*
*  NAME
*    DeCrackle.h
*  COPYRIGHT
*    $VER: DeCrackle.h 4.3 (05.02.04) © by Stefan Kost 1998-2004
*  FUNCTION
*    DeCrackle core header file
*  AUTHOR
*    Stefan Kost			sk		kost@imn.htwk-leipzig.de
*  CREATION DATE
*    11.Mar.2003
*  MODIFICATION HISTORY
*    05.Feb.2004	V 4.3	most recent version
*    11.Mar.2003	V 4.2	most recent version
*    11.Mar.2003	V 4.2	initial version
*  NOTES
*
*******
*/

#ifndef  DECRACKLE_H
#define  DECRACKLE_H

//-- includes -----------------------------------------------------------------

#include <libraries/sfxsupport.h> 
#include <libraries/sfxoperator.h> 

//-- defines ------------------------------------------------------------------

#define ENVFC1	0.95
#define ENVFC2	(1.0-ENVFC1)

/* platform independent fx data */

#define SFXCoreInstanceFields \
	SFXCommonCoreInstanceFields\
	\
	Source					src;	/* Quelle */\
	Param					p_threshd,p_thresha,p_adj;\
	\
	double					threshd,thresha,adj;\
	\
	LONG					lval;\
	double					amp,dif,lpropa,lpropd;\
	\
	ULONG					crackle_ct,crackle_cts[CH_MAX];\
	\
	SAMPLE					*dbuf,*sbuf;

typedef struct {
	SFXCoreInstanceFields
} SFXCoreInstance;

//-- prototypes ---------------------------------------------------------------

#ifndef DECRACKLE_C
	extern int init(void);
	extern int instantiate(SFXCoreInstance *instance);
	extern int activate(SFXCoreInstance *instance);
	extern void activate_ch(SFXCoreInstance *instance,unsigned char ch);
	extern void process_dry(SFXCoreInstance *instance,unsigned long samples);
	extern void process(SFXCoreInstance *instance,unsigned long samples);
	extern void deactivate_ch(SFXCoreInstance *instance,unsigned char ch);
	extern void deactivate(SFXCoreInstance *instance);
	extern void destroy(SFXCoreInstance *instance);
	extern void done(void);
#endif

#endif   /* DECRACKLE_H */

//-- eof ----------------------------------------------------------------------
